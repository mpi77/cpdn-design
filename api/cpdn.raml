#%RAML 0.8
title: CPDN REST API
version: v1
baseUri: https://api.cpdn.sd2.cz/{version}
mediaType: application/json
protocols: [ HTTPS ]
securedBy: [ oauth_2_0 ]

securitySchemes:
  - oauth_2_0: !include schemes/oauth2.raml

resourceTypes:
  - collection-read: !include types/collection-read.raml
  - collection-read-create: !include types/collection-read-create.raml
  - item-read: !include types/item-read.raml
  - item-read-update: !include types/item-read-update.raml
  - item-read-delete: !include types/item-read-delete.raml
  - item-read-update-delete: !include types/item-read-update-delete.raml
  - item-create-delete: !include types/item-create-delete.raml

traits:
  - paged: !include traits/paged.raml
  - searchable: !include traits/searchable.raml
  - sortable: !include traits/sortable.raml

/schemes:
  description: Scheme root resource
  type:
    collection-read-create:
      exampleCollection: !include samples/read-body/schemes.json
      exampleCreateItem: !include samples/create-body/scheme.json
      searchableDoc: (description=string;name=string;version=int)
      sortableDoc: (description,name,version)
  /{scheme_id}:
    type:
        item-read-update-delete:
          exampleReadItem: !include samples/read-body/scheme.json
          exampleUpdateItem: !include samples/update-body/scheme.json
    /nodes:
      type:
        collection-read:
          exampleCollection: !include samples/read-body/scheme-nodes.json
          searchableDoc: (mapPoint=int)
          sortableDoc: (mapPoint)
    /sections:
      type:
        collection-read:
          exampleCollection: !include samples/read-body/scheme-sections.json
          searchableDoc: (nodeSrc=int;nodeDst=int;nodeTrc=int)
          sortableDoc: (nodeSrc,nodeDst,nodeTrc)
    /mapPoints:
      type:
        collection-read:
          exampleCollection: !include samples/read-body/scheme-mapPoints.json
          searchableDoc: (gpsLat=double;gpsLon=double;gpsAlt=double;node=int;x=double;y=double)
          sortableDoc: (gpsLat,gpsLon,gpsAlt,node,x,y)
    /objects:
      type:
        collection-read:
          exampleCollection: !include samples/read-body/scheme-objects.json
          searchableDoc: (name=string;scheme=int)
          sortableDoc: (name,scheme)
    /permissions:
      type:
        collection-read:
          exampleCollection: !include samples/read-body/scheme-permissions.json
          searchableDoc: ()
          sortableDoc: ()
    /requests:
      type:
        collection-read:
          exampleCollection: !include samples/read-body/scheme-requests.json
          searchableDoc: ()
          sortableDoc: ()
 
/nodes:
  description: Node root resource
  type:
    collection-read-create:
      exampleCollection: !include samples/read-body/nodes.json
      exampleCreateItem: !include samples/create-body/node.json
      searchableDoc: (mapPoint=int;scheme=int)
      sortableDoc: (mapPoint,scheme)
  /{node_id}:
    type:
        item-read-delete:
          exampleReadItem: !include samples/read-body/node.json
    /calc:
      type:
        item-read-update:
          exampleReadItem: !include samples/read-body/node-calc.json
          exampleUpdateItem: !include samples/update-body/node-calc.json
    /mapPoint:
      type:
        item-read-update:
          exampleReadItem: !include samples/read-body/node-mapPoint.json
          exampleUpdateItem: !include samples/update-body/node-mapPoint.json
    /scheme:
      type:
        item-read-update:
          exampleReadItem: !include samples/read-body/node-scheme.json
          exampleUpdateItem: !include samples/update-body/node-scheme.json
    /spec:
      type:
        item-read-update:
          exampleReadItem: !include samples/read-body/node-spec.json
          exampleUpdateItem: !include samples/update-body/node-spec.json

/sections:
  description: Section root resource
  type:
    collection-read-create:
      exampleCollection: !include samples/read-body/sections.json
      exampleCreateItem: !include samples/create-body/section.json
      searchableDoc: (nodeSrc=int;nodeDst=int;nodeTrc=int;scheme=int)
      sortableDoc: (nodeSrc,nodeDst,nodeTrc,scheme)
  /{section_id}:
    type:
        item-read-delete:
          exampleReadItem: !include samples/read-body/section.json
    /calc:
      type:
        item-read-update:
          exampleReadItem: !include samples/read-body/section-calc.json
          exampleUpdateItem: !include samples/update-body/section-calc.json
    /nodes:
      type:
        item-read-update:
          exampleReadItem: !include samples/read-body/section-nodes.json
          exampleUpdateItem: !include samples/update-body/section-nodes.json
    /paths:
      type:
        collection-read:
          exampleCollection: !include samples/read-body/section-paths.json
          searchableDoc: (mapPointSrc=int;mapPointDst=int)
          sortableDoc: (mapPointSrc,mapPointDst)
    /scheme:
      type:
        item-read-update:
          exampleReadItem: !include samples/read-body/section-scheme.json
          exampleUpdateItem: !include samples/update-body/section-scheme.json
    /spec:
      type:
        item-read-update:
          exampleReadItem: !include samples/read-body/section-spec.json
          exampleUpdateItem: !include samples/update-body/section-spec.json

/mapPoints:
  description: MapPoint root resource
  type:
    collection-read-create:
      exampleCollection: !include samples/read-body/mapPoints.json
      exampleCreateItem: !include samples/create-body/mapPoint.json
      searchableDoc: (gpsLat=double;gpsLon=double;gpsAlt=double;node=int;scheme=int;x=double;y=double)
      sortableDoc: (gpsLat,gpsLon,gpsAlt,node,scheme,x,y)
  /{mapPoint_id}:
    type:
        item-read-update-delete:
          exampleReadItem: !include samples/read-body/mapPoint.json
          exampleUpdateItem: !include samples/update-body/mapPoint.json

/paths:
  description: Path root resource
  type:
    collection-read-create:
      exampleCollection: !include samples/read-body/paths.json
      exampleCreateItem: !include samples/create-body/path.json
      searchableDoc: (mapPointSrc=int;mapPointDst=int;section=int)
      sortableDoc: (mapPointSrc,mapPointDst,section)
  /{path_id}:
    type:
        item-read-update-delete:
          exampleReadItem: !include samples/read-body/path.json
          exampleUpdateItem: !include samples/update-body/path.json
/objects:
  description: Object root resource
  type:
    collection-read-create:
      exampleCollection: !include samples/read-body/objects.json
      exampleCreateItem: !include samples/create-body/object.json
      searchableDoc: (name=string;scheme=int)
      sortableDoc: (name,scheme)
  /{object_id}:
    type:
        item-read-update-delete:
          exampleReadItem: !include samples/read-body/object.json
          exampleUpdateItem: !include samples/update-body/object.json
    /nodes:
      type:
        collection-read:
          exampleCollection: !include samples/read-body/object-nodes.json
          searchableDoc: (mapPoint=int)
          sortableDoc: (mapPoint)
    /node/{node_id}:
      description: Create/delete relation between object_id and node_id
      type:
        item-create-delete:
          exampleCreateItem: !include samples/create-body/object-node.json
/notifications:
  description: Notification root resource
  type:
    collection-read:
      exampleCollection: !include samples/read-body/notifications.json
      searchableDoc: (user=int;title=string;tsCreate=string-time;tsRead=string-time)
      sortableDoc: (user,title,tsCreate,tsRead)
  /{notification_id}:
    type:
        item-read-update:
          exampleReadItem: !include samples/read-body/notification.json
          exampleUpdateItem: !include samples/update-body/notification.json

/permissions:
  description: Schema permissions root resource
  
/requests:
  description: Schema requests root resource